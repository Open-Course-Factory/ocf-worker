# docker-compose.yml - Updated with worker configuration
services:
  postgres-worker:
    image: postgres:15-alpine
    container_name: ocf-worker-postgres
    environment:
      POSTGRES_USER: ocf_worker
      POSTGRES_PASSWORD: worker_password_2024
      POSTGRES_DB: ocf_worker_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_worker_data:/var/lib/postgresql/data
      - ./deployments/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ocf-worker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ocf_worker -d ocf_worker_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  ocf-worker:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile
    container_name: ocf-worker-service
    environment:
      # Database
      DATABASE_URL: postgres://ocf_worker:worker_password_2024@postgres-worker:5432/ocf_worker_db?sslmode=disable
      
      # Server
      PORT: 8081
      LOG_LEVEL: info
      ENVIRONMENT: development
      
      # Storage - Default to filesystem, change to garage if needed
      STORAGE_TYPE: garage
      STORAGE_PATH: /app/storage
      
      # Garage Configuration (used when STORAGE_TYPE=garage)
      GARAGE_ENDPOINT: http://garage:3900
      GARAGE_ACCESS_KEY: GK31c2f218a2e44f485b94239e
      GARAGE_SECRET_KEY: 4420d99ef7aa26b56b5130ad7913a6a5c77653a5e7a47a3b4c9b8b9c5f8b7b4d
      GARAGE_BUCKET: ocf-courses
      GARAGE_REGION: garage
      
      # Jobs
      JOB_TIMEOUT: 30m
      CLEANUP_INTERVAL: 1h
      
      # Worker Configuration
      WORKER_COUNT: 3
      WORKER_POLL_INTERVAL: 5s
      WORKSPACE_BASE: /app/workspaces
      SLIDEV_COMMAND: "npx @slidev/cli"
      CLEANUP_WORKSPACE: "true"
      MAX_WORKSPACE_AGE: 24h
      DOCKER_CONTAINER: "true"
    ports:
      - "8081:8081"
    depends_on:
      postgres-worker:
        condition: service_healthy
    volumes:
      - worker_storage:/app/storage
      - worker_logs:/app/logs
      - worker_workspaces:/app/workspaces
    networks:
      - ocf-worker-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Service optionnel pour Garage S3 (d√©veloppement)
  garage:
    image: dxflrs/garage:v0.8.4
    container_name: ocf-worker-garage
    environment:
      GARAGE_RPC_SECRET: "4c8e6ca7e6c7d4c5a6e8b9c7e6c5d4c3b2a1e0f9e8d7c6b5a4b3c2d1e0f9e8d7"
      GARAGE_ADMIN_TOKEN: "garage-admin-token-2024"
      GARAGE_METRICS_TOKEN: "garage-metrics-token-2024"
    ports:
      - "3900:3900"  # S3 API
      - "3901:3901"  # RPC
      - "3902:3902"  # S3 Web
      - "3903:3903"  # Admin API
    volumes:
      - garage_data:/data
      - garage_meta:/meta
      - ./deployments/garage/garage.toml:/etc/garage.toml
    networks:
      - ocf-worker-network
    profiles: [ "garage"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3903/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_ADDRESS: "0.0.0.0"
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - ocf-worker-network

volumes:
  pgadmin:
    driver: local
  postgres_worker_data:
    driver: local
  worker_storage:
    driver: local
  worker_logs:
    driver: local
  worker_workspaces:
    driver: local
  garage_data:
    driver: local
  garage_meta:
    driver: local

networks:
  ocf-worker-network: